# SOF-ELKÂ® Configuration File
# (C)2024 Lewes Technology Consulting, LLC and Megan Roddie
#
# This file parses JSON-formatted Google Workspace logs exported by the
#   Google Workspace Log Collection tool
#   See: https://github.com/dlcowen/sansfor509/blob/main/GWS/gws-log-collection/
# Gmail activity and message logs are exported from the GWS web console and
#   converted with the csv2json.py script included with this repository
#   load with csv2json.py -r source.csv -w /logstash/gws/destination.json -t gws_gmail
#   (path must be /logstash/gws/, filename must be *.json, and tag must be gws_gmail)

filter {
  if [labels][type] == "gws" {

    # timestamp for all native JSON log types
    if [raw][id][time] {
      date {
        match => [ "[raw][id][time]", "ISO8601" ]
      }

    # timestamp for gmail logs (Originally CSV, but converted to JSON
    } else if [raw][date] {
      date {
        match => [ "[raw][date]", "ISO8601" ]
      }
    }

    # pick out fields that are consistent across all potential event records
    mutate {
      rename => {
        "[raw][id][applicationName]" => "[google_workspace][id][application][name]"
      }
    }

    # most log types have an array of events in each - this essentially iterates over that array of values
    if [raw][events] {
      split {
        field => "[raw][events]"
      }
    }

    # if there are event parameters, they are not in KV form - this will
    # convert the [ { "name": "foo", "value": "bar" } ] array to [ { "foo": "bar" } ] form
    if [raw][events][parameters] {
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_kv_to_fields.rb"
        script_params => {
          "source_field" => "[raw][events][parameters]"
          "destination_field" => "[raw][event_parameters]"
          "key_field" => "name"
          "val_field" => "value"
        }
      }
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_kv_to_fields.rb"
        script_params => {
          "source_field" => "[raw][events][parameters]"
          "destination_field" => "[raw][event_multi_parameters]"
          "key_field" => "name"
          "val_field" => "multiValue"
        }
      }
    }

    if [google_workspace][id][application][name] == "admin" {
      mutate {
        rename => {
          "[raw][actor][email]" => "[user][name]"
          "[raw][ipAddress]" => "[source][ip]"
          "[raw][events][type]" => "[google_workspace][event][type]"
          "[raw][events][name]" => "[google_workspace][event][name]"

          "[raw][event_parameters]" => "[google_workspace][admin][event_parameters]"
        }

        add_tag => [ "gws_admin" ]
      }

    } else if [google_workspace][id][application][name] == "drive" {
      mutate {
        rename => {
          "[raw][actor][email]" => "[user][name]"
          "[raw][ipAddress]" => "[source][ip]"
          "[raw][events][type]" => "[google_workspace][event][type]"
          "[raw][events][name]" => "[google_workspace][event][name]"

          "[raw][event_parameters]" => "[google_workspace][drive][event_parameters]"
          "[raw][event_multi_parameters][source_folder_title]" => "[google_workspace][drive][source_folder_title]"
          "[raw][event_multi_parameters][source_folder_id]" => "[google_workspace][drive][source_folder_id]"
          "[raw][event_multi_parameters][destination_folder_title]" => "[google_workspace][drive][destination_folder_title]"
          "[raw][event_multi_parameters][destination_folder_id]" => "[google_workspace][drive][destination_folder_id]"
          "[raw][event_multi_parameters][old_value]" => "[google_workspace][drive][old_value]"
          "[raw][event_multi_parameters][new_value]" => "[google_workspace][drive][new_value]"
        }
        add_tag => [ "gws_drive" ]
      }

    } else if [google_workspace][id][application][name] == "login" {
      mutate {
        rename => {
          "[raw][actor][email]" => "[user][name]"
          "[raw][ipAddress]" => "[source][ip]"
          "[raw][events][type]" => "[google_workspace][event][type]"
          "[raw][events][name]" => "[google_workspace][event][name]"

          "[raw][event_parameters]" => "[google_workspace][login][event_parameters]"
        }

        add_tag => [ "gws_login" ]
      }

    } else if [google_workspace][id][application][name] == "user_accounts" {
      mutate {
        rename => {
          "[raw][actor][email]" => "[user][name]"
          "[raw][ipAddress]" => "[source][ip]"
          "[raw][events][type]" => "[google_workspace][event][type]"
          "[raw][events][name]" => "[google_workspace][event][name]"

          "[raw][event_parameters]" => "[google_workspace][user_accounts][event_parameters]"
        }

        add_tag => [ "gws_user_accounts" ]
      }

    } else if [google_workspace][id][application][name] == "token" {
      mutate {
        rename => {
          "[raw][actor][email]" => "[user][name]"
          "[raw][ipAddress]" => "[source][ip]"
          "[raw][events][type]" => "[google_workspace][event][type]"
          "[raw][events][name]" => "[google_workspace][event][name]"

          "[raw][event_parameters]" => "[google_workspace][token][event_parameters]"
          "[raw][event_multi_parameters][scope]" => "event_scope"
        }

        add_tag => [ "gws_token" ]
      }

    } else if [google_workspace][id][application][name] == "mobile" {
      mutate {
        rename => {
          "[raw][actor][email]" => "[user][name]"
          "[raw][events][type]" => "[google_workspace][event][type]"
          "[raw][events][name]" => "[google_workspace][event][name]"

          "[raw][event_parameters]" => "[google_workspace][mobile][event_parameters]"
        }
      }

    } else if [google_workspace][id][application][name] == "chat" {
      mutate {
        rename => {
          "[raw][actor][email]" => "[user][name]"
          "[raw][events][type]" => "[google_workspace][event][type]"
          "[raw][events][name]" => "[google_workspace][event][name]"

          "[raw][event_parameters]" => "[google_workspace][chat][event_parameters]"
        }

        add_tag => [ "gws_chat" ]
      }

    # Google Groups Enterprise
    # see: https://developers.google.com/admin-sdk/reports/v1/appendix/activity/groups-enterprise
    } else if [google_workspace][id][application][name] == "groups_enterprise" {
      mutate {
        rename => {
          "[raw][actor][email]" => "[user][name]"
          "[raw][events][type]" => "[google_workspace][event][type]"
          "[raw][events][name]" => "[google_workspace][event][name]"

          "[raw][event_parameters]" => "[google_workspace][groups][event_parameters]"
        }

        add_tag => [ "gws_groups" ]
      }

    # Gmail log events and Gmail messages
    # see https://support.google.com/a/answer/11479100 and https://support.google.com/a/answer/11479989, respectively
    } else if "gws_gmail" in [tags] {
      mutate {
        rename => {
          "[raw][event]" => "[google_workspace][event][type]"
          "[raw][message_id]" => "[email][message_id]"
          "[raw][subject]" => "[email][subject]"
          "[raw][source_ip]" => "[source][ip]"
          "[raw][traffic_source]" => "[email][traffic_source]"
          "[raw][from_header_address]" => "[email][from][address]"
          "[raw][from_header_name]" => "[email][from][name]"
          "[raw][from_envelope]" => "[email][envelope][from][address]"
          "[raw][to_envelope]" => "[email][envelope][to][address]"
          "[raw][owner]" => "[email][owner]"
          "[raw][spam_classification]" => "[email][spam_classification]"
          "[raw][spam_classification_reason]" => "[email][spam_classification_reason]"
          "[raw][target_link_url]" => "[email][target][link_url]"
          "[raw][attachment_hash]" => "[email][attachments][file][hash]"
          "[raw][attachment_name]" => "[email][attachments][file][name]"
          "[raw][attachment_malware_family]" => "[email][attachments][malware_family]"
          "[raw][target_attachment_hash]" => "[email][target][attachments][file][hash]"
          "[raw][target_attachment_name]" => "[email][target][attachments][file][name]"
          "[raw][target_attachment_malware_family]" => "[email][target][attachments][malware_family]"
          "[raw][link_domain]" => "[email][link_domain]"
          "[raw][sender]" => "[email][sender][address]"
          "[raw][recipient]" => "[email][to][address]"
          "[raw][label]" => "[email][label]"
          "[raw][bcc]" => "[email][bcc][address]"
          "[raw][cc]" => "[email][cc][address]"
          "[raw][message_size]" => "[email][bytes]"
        }
      }

      # if there are multiple attachments, links, and/or labels, they are in comma-separated lists
      if [email][attachments][file][hash] {
        mutate {
          gsub => [ "[email][attachments][file][hash]", ", ", "," ]
          split => { "[email][attachments][file][hash]" => "," }
        }
      }
      # not sure what this will do if there is a comma in the attachment name...
      if [email][attachments][file][name] {
        mutate {
          gsub => [ "[email][attachments][file][name]", ", ", "," ]
          split => { "[email][attachments][file][name]" => "," }
        }
      }
      if [email][attachments][malware_family] {
        mutate {
          gsub => [ "[email][attachments][malware_family]", ", ", "," ]
          split => { "[email][attachments][malware_family]" => "," }
        }
      }
      if [email][link_domain] {
        mutate {
          gsub => [ "[email][link_domain]", ", ", "," ]
          split => { "[email][link_domain]" => "," }
        }
      }
      if [email][label] {
        mutate {
          gsub => [ "[email][label]", ", ", "," ]
          split => { "[email][label]" => "," }
        }
      }
    }
 
    # remove angle brackets from the message id
    if [email][message_id] {
      mutate {
        gsub => [ "[email][message_id]", "[<>]", "" ]
      }
    }

    # remove remaining fields
    mutate {
      remove_field => [ "raw" ]
    }
  }
}
