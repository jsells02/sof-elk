# SOF-ELKÂ® Configuration File
# (C)2024 Lewes Technology Consulting, LLC
#
# This file parses CSV-formatted Azure linux syslog logs
# At this time, the only known CSV logs from Azure that will be handled are of this type
# This preprocessor normalizes the content to match other syslog pipelines
# The resulting event will be handled as a normal syslog event

filter {
  if [labels][type] == "azure" {

    if "csv" in [tags] {
      ### Azure Linux Logs, in CSV format
      csv {
        separator => ","
        skip_empty_rows => "true"
        columns => [ "partition_key", "row_key", "datetime", "deployment_id", "deployment_id_type","event_time", "event_time_type", "facility", "facility_type","fluentd_ingest_timestamp", "fluentd_ingest_timestamp_type", "host", "host_type", "ignore", "ignore_type", "msg", "msg_type", "n", "n_type", "precise_timestamp", "precise_timestamp_type", "row_index", "row_index_type", "sending_host", "sending_host_type", "severity", "severity_type", "timestamp", "timestamp_type", "hostname", "hostname_type", "ident", "ident_type", "pid", "pid_type" ]
        remove_field => "message"
        target => "raw"
        add_tag => [ "azure_linux_syslog" ]
      }

      mutate {
        rename => {
          "[raw][event_time]" => "event_time"
          "[raw][facility]" => "[log][syslog][facility][name]"
          "[raw][severity]" => "[log][syslog][severity][name]"
          "[raw][host]" => "[log][syslog][hostname]"
          "[raw][ident]" => "[log][syslog][appname]"
          "[raw][pid]" => "[log][syslog][procid]"
          "[raw][msg]" => "message"
        }
        # this ensures the linux logs go to the proper index rather than piling them in with the other azure logs
        replace => { "[sof-elk][base_index]" => "logstash" }
      }

      if [event_time] == "EventTime" {
        drop {}  # drop the first line that contains the column names.
      }

      date {
        match => [ "event_time", "ISO8601" ]
      }

      # convert facility and severity back to integers
      translate {
        source => "[log][syslog][facility][name]"
        target => "[log][syslog][facility][code]"
        dictionary_path => "/usr/local/sof-elk/lib/dictionaries/syslog_facility2int.yaml"
      }
      translate {
        source => "[log][syslog][severity][name]"
        target => "[log][syslog][severity][code]"
        dictionary_path => "/usr/local/sof-elk/lib/dictionaries/syslog_severity2int.yaml"
      }

      mutate {
        remove_field => [ "raw", "event_time", "facility", "severity" ]
        replace => { "type" => "syslog" }
      }
    }
  }
}
