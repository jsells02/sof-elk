# SOF-ELKÂ® Configuration File
# (C)2024 Lewes Technology Consulting, LLC and Josh Lemon
#
# This file parses JSON-formatted Google Cloud Platform logs

filter {
  if [labels][type] == "gcp" {
    date {
      match => [ "[raw][timestamp]", "ISO8601" ]
    }

    mutate {
      rename => {
        "[raw][logName]" => "[gcp][log_name]"
        "[raw][severity]" => "[log][level]"
        "[raw][insertId]" => "[gcp][log_id]"
        "[raw][protoPayload][requestMetadata][callerIp]" => "[source][ip]"
        "[raw][protoPayload][requestMetadata][callerSuppliedUserAgent]" => "[user_agent][original]"
        "[raw][protoPayload][@type]" => "[gcp][audit][type]"
        "[raw][protoPayload][@type][status][message]" => "[gcp][audit][status][message]"
        "[raw][protoPayload][authenticationInfo][principalEmail]" => "[user][name]"
        "[raw][protoPayload][serviceName]" => "[gcp][audit][service_name]"
        "[raw][protoPayload][authorizationInfo]" => "[gcp][audit][authorization_info]"
        "[raw][protoPayload][methodName]" => "[gcp][audit][method_name]"
        "[raw][protoPayload][resourceName]" => "[gcp][audit][request][resource_name]"
        "[raw][protoPayload][request][service_account][display_name]" => "[gcp][audit][request][service_account][name]"
        "[raw][protoPayload][request][service_account][description]" => "[gcp][audit][request][service_account][description]"
        "[raw][protoPayload][response][email]" => "[gcp][audit][response][account_email]"
        "[raw][protoPayload][response][unique_id]" => "[gcp][audit][response][account_id]"
        "[raw][protoPayload][serviceData][policyDelta][bindingDeltas]" => "[gcp][audit][policy_deltas]"
        "[raw][protoPayload][requestMetadata][destinationAttributes][ip]" => "[destination][ip]"
        "[raw][protoPayload][requestMetadata][destinationAttributes][port]" => "[destination][port]"
        "[raw][jsonPayload][message]" => "[gcp][log_message]"
        "[raw][jsonPayload][connection][dest_ip]" => "[destination][ip]"
        "[raw][jsonPayload][connection][dest_port]" => "[destination][port]"
        "[raw][jsonPayload][connection][src_ip]" => "[source][ip]"
        "[raw][jsonPayload][connection][src_port]" => "[source][port]"
        "[raw][jsonPayload][connection][protocol]" => "[network][iana_number]"
        "[raw][jsonPayload][disposition]" => "[gcp][disposition]"
        "[raw][jsonPayload][dest_instance][project_id]" => "[gcp][destination][instance][project_id]"
        "[raw][jsonPayload][dest_instance][region]" => "[gcp][destination][instance][region]"
        "[raw][jsonPayload][dest_instance][vm_name]" => "[gcp][destination][instance][vm_name]"
        "[raw][jsonPayload][dest_instance][zone]" => "[gcp][destination][instance][zone]"
        "[raw][jsonPayload][dest_vpc][project_id]" => "[gcp][destination][vpc][project_id]"
        "[raw][jsonPayload][dest_vpc][subnetwork_name]" => "[gcp][destination][vpc][subnetwork_name]"
        "[raw][jsonPayload][dest_vpc][vpc_name]" => "[gcp][destination][vpc][vpc_name]"
        "[raw][jsonPayload][src_instance][project_id]" => "[gcp][source][instance][project_id]"
        "[raw][jsonPayload][src_instance][region]" => "[gcp][source][instance][region]"
        "[raw][jsonPayload][src_instance][vm_name]" => "[gcp][source][instance][vm_name]"
        "[raw][jsonPayload][src_instance][zone]" => "[gcp][source][instance][zone]"
        "[raw][jsonPayload][src_vpc][project_id]" => "[gcp][source][vpc][project_id]"
        "[raw][jsonPayload][src_vpc][subnetwork_name]" => "[gcp][source][vpc][subnetwork_name]"
        "[raw][jsonPayload][src_vpc][vpc_name]" => "[gcp][source][vpc][vpc_name]"
        "[raw][jsonPayload][rule_details][action]" => "[gcp][firewall][rule_details][action]"
        "[raw][jsonPayload][rule_details][direction]" => "[gcp][firewall][rule_details][direction]"
        "[raw][jsonPayload][rule_details][ip_port_info]" => "[gcp][firewall][rule_details][ip_port_info]"
        "[raw][jsonPayload][rule_details][priority]" => "[gcp][firewall][rule_details][priority]"
        "[raw][jsonPayload][rule_details][reference]" => "[gcp][firewall][rule_details][reference]"
        "[raw][jsonPayload][rule_details][destination_range]" => "[gcp][firewall][rule_details][destination_range]"
        "[raw][jsonPayload][rule_details][source_range]" => "[gcp][firewall][rule_details][source_range]"
        "[raw][jsonPayload][rule_details][target_tag]" => "[gcp][firewall][rule_details][target_tag]"
        "[raw][jsonPayload][rule_details][source_tag]" => "[gcp][firewall][rule_details][source_tag]"
        "[raw][textPayload]" => "[gcp][text_payload]"
        "[raw][resource][type]" => "[gcp][resource][type]"
        "[raw][resource][labels][bucket_name]" => "[gcp][resource][bucket_name]"
        "[raw][resource][labels][zone]" => "[gcp][resource][zone]"
        "[raw][resource][labels][instance_id]" => "[gcp][resource][id]"
        "[raw][resource][labels][project_id]" => "[gcp][instance][project_id]"
        "[raw][resource][labels][subnetwork_name]" => "[gcp][resource][subnetwork_name]"
      }
      add_tag => [ "gcp_log" ]
    }

    if [raw][labels][instance_name] {
      mutate {
        rename => {
          "[raw][labels][instance_name]" => "[gcp][compute_resource_name]"
        }
      }
    } else if [raw][labels][compute.googleapis.com/resource_name] {
      mutate {
        rename => {
          "[raw][labels][compute.googleapis.com/resource_name]" => "[gcp][compute_resource_name]"
        }
      }
    }

    # remove remaining fields
    mutate {
      remove_field => [ "raw" ]
    }

    # split [gcp][audit][authorization_info] out into [gcp][audit][authorization_permissions] - but keep the original intact
    if [gcp][audit][authorization_info] {
      ruby {
        path => "/usr/local/sof-elk/supporting-scripts/split_gcp_authinfo_fields.rb"
        script_params => {
          "source_field" => "[gcp][audit][authorization_info]"
          "destination_field" => "[gcp][audit][authorization_permissions]"
          "key_field" => "permission"
        }
      }
    }
  }
}
